<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Patient Dashboard</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/patient.css">
</head>

<body>
    <nav>
        <div class="logo">Remote Patient Monitoring</div>
        <ul>
            <li><a href="/auth/logout">Logout</a></li>
        </ul>
    </nav>

    <section class="dashboard-container">
        <h1>Welcome, <%= user.fullname %></h1>
        <p>Here you can view your health data and recent monitoring.</p>

        <h2>Start Health Monitoring</h2>

        <!-- Vücut Sıcaklığı Testi -->
        <button id="start-test-btn" onclick="startBodyTempTest()">Start Temperature Test</button>

        <div id="test-instructions" class="instructions hidden">
            <h3>📢 Please Hold the Temperature Sensor!</h3>
            <p>Place the sensor in contact with your skin for 40 seconds.</p>
            <img src="/images/hand-sensor.png" alt="Hand Holding Sensor" class="instruction-image">
            <img src="/images/body-sensor.png" alt="Sensor on Body" class="instruction-image">
            <p id="countdown">40</p>
        </div>

        <p id="test-result" class="result"></p>
        <p id="temp-result"></p>

        <!-- SpO2 Testi -->
        <button id="start-spo2-btn" onclick="startSpo2Test()">Start SpO₂ Test</button>

        <div id="spo2-instructions" class="instructions hidden">
            <h3>📢 Please Hold Your Finger on the SpO₂ Sensor!</h3>
            <p>Place your finger gently on the sensor and stay still.</p>
            <img src="/images/spo2-finger.png" alt="Finger on SpO₂ Sensor" class="instruction-image">
            <img src="/images/spo2-sensor.png" alt="SpO₂ Sensor Device" class="instruction-image">
        </div>

        <p id="spo2-result"></p>
        <p id="spo2-test-result"></p>
    </section>

    <script>
        let tempTestInProgress = false;
        let spo2TestInProgress = false;

        // 📌 **Vücut Sıcaklığı Testi Başlat**
        function startBodyTempTest() {
            if (tempTestInProgress) return; 
            tempTestInProgress = true;
            document.getElementById("test-instructions").classList.remove("hidden");
            document.getElementById("start-test-btn").disabled = true;
            let countdown = 40;
            let countdownElement = document.getElementById("countdown");
            document.getElementById("test-result").innerText = "⏳ Please hold the sensor for 40 seconds...";

            fetch('/api/measure-bodytemp', { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        startCountdown();
                    } else {
                        document.getElementById("test-result").innerText = "❌ Measurement could not be started.";
                        resetBodyTempTest();
                    }
                })
                .catch(error => {
                    document.getElementById("test-result").innerText = "❌ Server error!";
                    resetBodyTempTest();
                });

            function startCountdown() {
                let timer = setInterval(() => {
                    countdown--;
                    countdownElement.innerText = countdown;
                    if (countdown <= 0) {
                        clearInterval(timer);
                        getBodyTempResult();
                    }
                }, 1000);
            }

            function getBodyTempResult(attempt = 0) {
                fetch('/api/get-bodytemp')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.getElementById("temp-result").innerText = `${data.temperature}°C`;
                            document.getElementById("test-result").innerText = `✅ Measurement completed: ${data.temperature}°C`;
                            resetBodyTempTest();
                        } else {
                            if (attempt < 10) {
                                setTimeout(() => getBodyTempResult(attempt + 1), 1000);
                            } else {
                                document.getElementById("test-result").innerText = "❌ Measurement failed. Please try again.";
                                resetBodyTempTest();
                            }
                        }
                    })
                    .catch(error => {
                        document.getElementById("test-result").innerText = "❌ Server error!";
                        resetBodyTempTest();
                    });
            }

            function resetBodyTempTest() {
                document.getElementById("test-instructions").classList.add("hidden");
                setTimeout(() => {
                    document.getElementById("start-test-btn").disabled = false;
                }, 3000);
                tempTestInProgress = false;
            }
        }

        // 📌 **SpO₂ Testi Başlat**
        function startSpo2Test() {
            if (spo2TestInProgress) return;
            spo2TestInProgress = true;
            document.getElementById("spo2-instructions").classList.remove("hidden");
            document.getElementById("start-spo2-btn").disabled = true;
            document.getElementById("spo2-test-result").innerText = "⏳ Measuring SpO₂... Please wait.";

            fetch('/api/measure-spo2', { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        getSpo2Result();
                    } else {
                        document.getElementById("spo2-test-result").innerText = "❌ SpO₂ Measurement could not be started.";
                        resetSpo2Test();
                    }
                })
                .catch(error => {
                    document.getElementById("spo2-test-result").innerText = "❌ Server error!";
                    resetSpo2Test();
                });

            function getSpo2Result(attempt = 0) {
                fetch('/api/get-spo2')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.getElementById("spo2-result").innerText = `SpO₂: ${data.spo2}%`;
                            document.getElementById("spo2-test-result").innerText = `✅ Measurement completed: ${data.spo2}%`;
                            resetSpo2Test();
                        } else {
                            if (attempt < 15) {
                                setTimeout(() => getSpo2Result(attempt + 1), 1000);
                            } else {
                                document.getElementById("spo2-test-result").innerText = "❌ Measurement failed. Please try again.";
                                resetSpo2Test();
                            }
                        }
                    })
                    .catch(error => {
                        document.getElementById("spo2-test-result").innerText = "❌ Server error!";
                        resetSpo2Test();
                    });
            }

            function resetSpo2Test() {
                document.getElementById("spo2-instructions").classList.add("hidden");
                setTimeout(() => {
                    document.getElementById("start-spo2-btn").disabled = false;
                }, 3000);
                spo2TestInProgress = false;
            }
        }
    </script>

</body>
</html>
